#бинарный поиск
def binary_search(list1, n): 
    low = 0 
    high = len(list1) - 1 
    mid = 0 
 
    while low  n: 
            high = mid - 1 
 
      
        else: 
            return mid 
            
    return -1 
 
 

list1 = [12, 24, 32, 39, 45, 50, 54] 
n = 45 
 
result = binary_search(list1, n) 
 
if result != -1: 
    print("Element is present at index", str(result)) 
else: 
    print("Element is not present in list1") 
    
#барьерный поиск 
def LinearSearch(lys, element):
  for i in range (len(lys)):
    if lys[i] == element:
      return i
    return -1
print(LinearSearch([1,2,3,4,5,2,1], 2))

#сортировка выбором
def selection_sort(alist):
    for i in range(0, len(alist) - 1):
        smallest = i
        for j in range(i + 1, len(alist)):
            if alist[j] < alist[smallest]:
                smallest = j
        alist[i], alist[smallest] = alist[smallest], alist[i]
 
 
alist = input('Enter the list of numbers: ').split()
alist = [int(x) for x in alist]
selection_sort(alist)
print('Sorted list: ', end='')
print(alist)


#сортировка вставками
def insertion_sort(list1): 
 
       
        for i in range(1, len(list1)): 
 
            value = list1[i] 
 
            j = i - 1 
            while j >= 0 and value < list1[j]: 
                list1[j + 1] = list1[j] 
                j -= 1 
            list1[j + 1] = value 
        return list1 
           
 
list1 = [10, 5, 13, 8, 2] 
print("The unsorted list is:", list1) 
 
print("The sorted list1 is:", insertion_sort(list1))

#сортировка пузырьковым методом
def bubble_sort(nums):  
  
    swapped = True
    while swapped:
        swapped = False
        for i in range(len(nums) - 1):
            if nums[i] > nums[i + 1]:
               
                nums[i], nums[i + 1] = nums[i + 1], nums[i]
                
                swapped = True


random_list_of_nums = [5, 2, 1, 8, 4]  
bubble_sort(random_list_of_nums)  
print(random_list_of_nums)
